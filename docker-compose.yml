version: '3.7'
x-logging: &default-logging
  options:
    max-size: "100m"
    max-file: "5"
  driver: json-file
services:
  trino:
    image: 'trinodb/trino:latest'
    hostname: trino-coordinator
    ports:
      - '8080:8080'
    volumes:
      - ./etc:/etc/trino
    networks:
      - trino-network


  dbt:
    build: /docker/dbt
    hostname: dbt
    networks:
      - trino-network
    volumes:
      - ./script/dbt-script.sh:/dbt-script.sh
      - ./dbt_project.yml:/usr/app/dbt/dbt_project.yml
      - ./profiles.yml:/usr/app/dbt/profiles.yml
      - ./models:/usr/app/dbt/models
      - ./macros:/usr/app/dbt/macros
      - ./target:/usr/app/dbt/target
      - ./prefectdemo_dbt.py:/usr/app/dbt/prefectdemo_dbt.py
    entrypoint: ["/bin/bash", "/dbt-script.sh"]

  clickhouse:
    image: clickhouse/clickhouse-server
    ports :
      - '8123:8123'
    environment:
      - CLICKHOUSE_ADMIN_PASSWORD=password123
      - ALLOW_EMPTY_PASSWORD=no
    networks:
      - trino-network

  mariadb:
    image: 'mariadb:latest'
    hostname: mariadb
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
      MYSQL_DATABASE: metastore_db
    networks:
      - trino-network

  hive-metastore:
    hostname: hive-metastore
    image: 'bitsondatadev/hive-metastore:latest'
    ports:
      - '9083:9083' # Metastore Thrift
    volumes:
      - ./conf/metastore-site.xml:/opt/apache-hive-metastore-3.0.0-bin/conf/metastore-site.xml:ro
    environment:
      METASTORE_DB_HOSTNAME: mariadb
    depends_on:
      - mariadb
    networks:
      - trino-network
# https://min.io/docs/minio/linux/operations/install-deploy-manage/migrate-fs-gateway.html#overview
# https://github.com/minio/minio/discussions/15967
  minio:
    hostname: minio
    image: 'minio/minio:RELEASE.2022-10-24T18-35-07Z'
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio-data:/mnt/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
      # MINIO_ACCESS_KEY and MINIO_SECRET_KEY are deprecated since version RELEASE.2021-04-22T15-44-28Z.
      # https://min.io/docs/minio/linux/reference/minio-server/minio-server.html#envvar.MINIO_ACCESS_KEY
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
      MINIO_VOLUMES: /mnt/data
    command: server /mnt/data  --console-address ":9001"
    networks:
      - trino-network


  init:
      image: airbyte/init:${VERSION}
      logging: *default-logging
      container_name: init
      command: /bin/sh -c "./scripts/create_mount_directories.sh /local_parent ${HACK_LOCAL_ROOT_PARENT} ${LOCAL_ROOT}"
      environment:
        - LOCAL_ROOT=${LOCAL_ROOT}
        - HACK_LOCAL_ROOT_PARENT=${HACK_LOCAL_ROOT_PARENT}
      volumes:
        - ${HACK_LOCAL_ROOT_PARENT}:/local_parent
  bootloader:
      image: airbyte/bootloader:${VERSION}
      logging: *default-logging
      container_name: airbyte-bootloader
      environment:
        - AIRBYTE_VERSION=${VERSION}
        - DATABASE_PASSWORD=${DATABASE_PASSWORD}
        - DATABASE_URL=${DATABASE_URL}
        - DATABASE_USER=${DATABASE_USER}
        - LOG_LEVEL=${LOG_LEVEL}
        - LOCAL_CONNECTOR_CATALOG_PATH=${LOCAL_CONNECTOR_CATALOG_PATH}
      networks:
        - trino-network
      depends_on:
        init:
          condition: service_completed_successfully
  db:
      image: airbyte/db:${VERSION}
      logging: *default-logging
      container_name: airbyte-db
      restart: unless-stopped
      environment:
        - CONFIG_DATABASE_PASSWORD=${CONFIG_DATABASE_PASSWORD:-}
        - CONFIG_DATABASE_URL=${CONFIG_DATABASE_URL:-}
        - CONFIG_DATABASE_USER=${CONFIG_DATABASE_USER:-}
        - DATABASE_PASSWORD=${DATABASE_PASSWORD}
        - DATABASE_URL=${DATABASE_URL}
        - DATABASE_USER=${DATABASE_USER}
        - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
        - POSTGRES_USER=${DATABASE_USER}
      volumes:
        - db:/var/lib/postgresql/data
      networks:
        - trino-network
  worker:
      image: airbyte/worker:${VERSION}
      logging: *default-logging
      container_name: airbyte-worker
      restart: unless-stopped
      environment:
        - AIRBYTE_VERSION=${VERSION}
        - AUTO_DISABLE_FAILING_CONNECTIONS=${AUTO_DISABLE_FAILING_CONNECTIONS}
        - CONFIG_DATABASE_PASSWORD=${CONFIG_DATABASE_PASSWORD:-}
        - CONFIG_DATABASE_URL=${CONFIG_DATABASE_URL:-}
        - CONFIG_DATABASE_USER=${CONFIG_DATABASE_USER:-}
        - CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION=${CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION:-}
        - CONFIG_ROOT=${CONFIG_ROOT}
        - DATABASE_PASSWORD=${DATABASE_PASSWORD}
        - DATABASE_URL=${DATABASE_URL}
        - DATABASE_USER=${DATABASE_USER}
          # - DEPLOYMENT_MODE=${DEPLOYMENT_MODE}
        - INTERNAL_API_HOST=${INTERNAL_API_HOST}
        - JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION=${JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION:-}
        - JOB_MAIN_CONTAINER_CPU_LIMIT=${JOB_MAIN_CONTAINER_CPU_LIMIT}
        - JOB_MAIN_CONTAINER_CPU_REQUEST=${JOB_MAIN_CONTAINER_CPU_REQUEST}
        - JOB_MAIN_CONTAINER_MEMORY_LIMIT=${JOB_MAIN_CONTAINER_MEMORY_LIMIT}
        - JOB_MAIN_CONTAINER_MEMORY_REQUEST=${JOB_MAIN_CONTAINER_MEMORY_REQUEST}
        - LOCAL_DOCKER_MOUNT=${LOCAL_DOCKER_MOUNT}
        - LOCAL_ROOT=${LOCAL_ROOT}
        - LOG_LEVEL=${LOG_LEVEL}
        # - LOG_CONNECTOR_MESSAGES=${LOG_CONNECTOR_MESSAGES}
        - MAX_CHECK_WORKERS=${MAX_CHECK_WORKERS}
        - MAX_DISCOVER_WORKERS=${MAX_DISCOVER_WORKERS}
        - MAX_SPEC_WORKERS=${MAX_SPEC_WORKERS}
        - MAX_SYNC_WORKERS=${MAX_SYNC_WORKERS}
        - MAX_NOTIFY_WORKERS=${MAX_NOTIFY_WORKERS}
        - SHOULD_RUN_NOTIFY_WORKFLOWS=${SHOULD_RUN_NOTIFY_WORKFLOWS}
        - NORMALIZATION_JOB_MAIN_CONTAINER_MEMORY_LIMIT=${NORMALIZATION_JOB_MAIN_CONTAINER_MEMORY_LIMIT}
        - NORMALIZATION_JOB_MAIN_CONTAINER_MEMORY_REQUEST=${NORMALIZATION_JOB_MAIN_CONTAINER_MEMORY_REQUEST}
        - NORMALIZATION_JOB_MAIN_CONTAINER_CPU_LIMIT=${NORMALIZATION_JOB_MAIN_CONTAINER_CPU_LIMIT}
        - NORMALIZATION_JOB_MAIN_CONTAINER_CPU_REQUEST=${NORMALIZATION_JOB_MAIN_CONTAINER_CPU_REQUEST}
        # - SECRET_PERSISTENCE=${SECRET_PERSISTENCE}
        - SYNC_JOB_MAX_ATTEMPTS=${SYNC_JOB_MAX_ATTEMPTS}
        - SYNC_JOB_MAX_TIMEOUT_DAYS=${SYNC_JOB_MAX_TIMEOUT_DAYS}
        - TEMPORAL_HOST=${TEMPORAL_HOST}
        - TRACKING_STRATEGY=${TRACKING_STRATEGY}
        - WEBAPP_URL=${WEBAPP_URL}
        - WORKSPACE_DOCKER_MOUNT=${WORKSPACE_DOCKER_MOUNT}
        - WORKSPACE_ROOT=${WORKSPACE_ROOT}
        - METRIC_CLIENT=${METRIC_CLIENT}
        - OTEL_COLLECTOR_ENDPOINT=${OTEL_COLLECTOR_ENDPOINT}
        - JOB_ERROR_REPORTING_STRATEGY=${JOB_ERROR_REPORTING_STRATEGY}
        # - JOB_ERROR_REPORTING_SENTRY_DSN=${JOB_ERROR_REPORTING_SENTRY_DSN}
        - ACTIVITY_MAX_ATTEMPT=${ACTIVITY_MAX_ATTEMPT}
        - ACTIVITY_INITIAL_DELAY_BETWEEN_ATTEMPTS_SECONDS=${ACTIVITY_INITIAL_DELAY_BETWEEN_ATTEMPTS_SECONDS}
        - ACTIVITY_MAX_DELAY_BETWEEN_ATTEMPTS_SECONDS=${ACTIVITY_MAX_DELAY_BETWEEN_ATTEMPTS_SECONDS}
        - WORKFLOW_FAILURE_RESTART_DELAY_SECONDS=${WORKFLOW_FAILURE_RESTART_DELAY_SECONDS}
        - AUTO_DETECT_SCHEMA=${AUTO_DETECT_SCHEMA}
        - USE_STREAM_CAPABLE_STATE=${USE_STREAM_CAPABLE_STATE}
        - MICRONAUT_ENVIRONMENTS=${WORKERS_MICRONAUT_ENVIRONMENTS}
        # - APPLY_FIELD_SELECTION=${APPLY_FIELD_SELECTION}
        # - FIELD_SELECTION_WORKSPACES=${FIELD_SELECTION_WORKSPACES}
      configs:
        - flags
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - workspace:${WORKSPACE_ROOT}
        - ${LOCAL_ROOT}:${LOCAL_ROOT}
      ports:
        - "9000"
      networks:
        - trino-network
      depends_on:
        bootloader:
          condition: service_completed_successfully
  server:
      image: airbyte/server:${VERSION}
      logging: *default-logging
      container_name: airbyte-server
      restart: unless-stopped
      environment:
        - AIRBYTE_ROLE=${AIRBYTE_ROLE:-}
        - AIRBYTE_VERSION=${VERSION}
        - CONFIG_DATABASE_PASSWORD=${CONFIG_DATABASE_PASSWORD:-}
        - CONFIG_DATABASE_URL=${CONFIG_DATABASE_URL:-}
        - CONFIG_DATABASE_USER=${CONFIG_DATABASE_USER:-}
        - CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION=${CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION:-}
        - CONFIG_ROOT=${CONFIG_ROOT}
        - DATABASE_PASSWORD=${DATABASE_PASSWORD}
        - DATABASE_URL=${DATABASE_URL}
        - DATABASE_USER=${DATABASE_USER}
        - JOB_MAIN_CONTAINER_CPU_LIMIT=${JOB_MAIN_CONTAINER_CPU_LIMIT}
        - JOB_MAIN_CONTAINER_CPU_REQUEST=${JOB_MAIN_CONTAINER_CPU_REQUEST}
        - JOB_MAIN_CONTAINER_MEMORY_LIMIT=${JOB_MAIN_CONTAINER_MEMORY_LIMIT}
        - JOB_MAIN_CONTAINER_MEMORY_REQUEST=${JOB_MAIN_CONTAINER_MEMORY_REQUEST}
        - JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION=${JOBS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION:-}
        - LOG_LEVEL=${LOG_LEVEL}
        # - NEW_SCHEDULER=${NEW_SCHEDULER}
        # - SECRET_PERSISTENCE=${SECRET_PERSISTENCE}
        - TEMPORAL_HOST=${TEMPORAL_HOST}
        - TRACKING_STRATEGY=${TRACKING_STRATEGY}
        - JOB_ERROR_REPORTING_STRATEGY=${JOB_ERROR_REPORTING_STRATEGY}
        # - JOB_ERROR_REPORTING_SENTRY_DSN=${JOB_ERROR_REPORTING_SENTRY_DSN}
        - WEBAPP_URL=${WEBAPP_URL}
        # - WORKER_ENVIRONMENT=${WORKER_ENVIRONMENT}
        - WORKSPACE_ROOT=${WORKSPACE_ROOT}
        # - GITHUB_STORE_BRANCH=${GITHUB_STORE_BRANCH}
        - MICRONAUT_ENVIRONMENTS=${WORKERS_MICRONAUT_ENVIRONMENTS}
        - AUTO_DETECT_SCHEMA=${AUTO_DETECT_SCHEMA}
        - MAX_NOTIFY_WORKERS=5
        - SHOULD_RUN_NOTIFY_WORKFLOWS=${SHOULD_RUN_NOTIFY_WORKFLOWS}
      ports:
        - "8001"
      configs:
        - flags
      volumes:
        - workspace:${WORKSPACE_ROOT}
        - data:${CONFIG_ROOT}
        - ${LOCAL_ROOT}:${LOCAL_ROOT}
      networks:
        - trino-network
      depends_on:
        bootloader:
          condition: service_completed_successfully
  webapp:
      image: airbyte/webapp:${VERSION}
      logging: *default-logging
      container_name: airbyte-webapp
      restart: unless-stopped
      ports:
        - "80"
      environment:
        - INTERNAL_API_HOST=${INTERNAL_API_HOST}
        - CONNECTOR_BUILDER_API_HOST=${CONNECTOR_BUILDER_API_HOST}
        - TRACKING_STRATEGY=${TRACKING_STRATEGY}
      networks:
        - trino-network
      depends_on:
        bootloader:
          condition: service_completed_successfully
  airbyte-temporal:
      image: airbyte/temporal:${VERSION}
      logging: *default-logging
      container_name: airbyte-temporal
      restart: unless-stopped
      environment:
        - DB=postgresql
        - DB_PORT=${DATABASE_PORT}
        - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/development.yaml
        - LOG_LEVEL=${LOG_LEVEL}
        - POSTGRES_PWD=${DATABASE_PASSWORD}
        - POSTGRES_SEEDS=${DATABASE_HOST}
        - POSTGRES_USER=${DATABASE_USER}
      volumes:
        - ./temporal/dynamicconfig:/etc/temporal/config/dynamicconfig
      networks:
        - trino-network
  airbyte-cron:
      image: airbyte/cron:${VERSION}
      logging: *default-logging
      container_name: airbyte-cron
      restart: unless-stopped
      environment:
        - AIRBYTE_VERSION=${VERSION}
        - CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION=${CONFIGS_DATABASE_MINIMUM_FLYWAY_MIGRATION_VERSION}
        - DATABASE_PASSWORD=${DATABASE_PASSWORD}
        - DATABASE_URL=${DATABASE_URL}
        - DATABASE_USER=${DATABASE_USER}
          # - DEPLOYMENT_MODE=${DEPLOYMENT_MODE}
        - LOG_LEVEL=${LOG_LEVEL}
        # - REMOTE_CONNECTOR_CATALOG_URL=${REMOTE_CONNECTOR_CATALOG_URL}
        # - TEMPORAL_HISTORY_RETENTION_IN_DAYS=${TEMPORAL_HISTORY_RETENTION_IN_DAYS}
        # - UPDATE_DEFINITIONS_CRON_ENABLED=${UPDATE_DEFINITIONS_CRON_ENABLED}
        - WORKSPACE_ROOT=${WORKSPACE_ROOT}
        - MICRONAUT_ENVIRONMENTS=${CRON_MICRONAUT_ENVIRONMENTS}
      configs:
        - flags
      volumes:
        - workspace:${WORKSPACE_ROOT}
      networks:
        - trino-network
      depends_on:
        bootloader:
          condition: service_completed_successfully
  airbyte-connector-builder-server:
      image: airbyte/connector-builder-server:${VERSION} # Replace with airbyte/connector-atelier-server:${VERSION} to test the builder micronaut refactor
      logging: *default-logging
      container_name: airbyte-connector-builder-server
      restart: unless-stopped
      ports:
        - 80
      environment:
        - AIRBYTE_VERSION=${VERSION}
          # - CDK_VERSION=${CDK_VERSION}
          # - PYTHON_VERSION=${PYTHON_VERSION}
      networks:
        - trino-network
      depends_on:
        bootloader:
          condition: service_completed_successfully
  airbyte-proxy:
      image: airbyte/proxy:${VERSION}
      container_name: airbyte-proxy
      restart: unless-stopped
      ports:
        - "8000:8000"
        - "8001:8001"
        - "8003:8003"
      environment:
        - BASIC_AUTH_USERNAME=${BASIC_AUTH_USERNAME}
        - BASIC_AUTH_PASSWORD=${BASIC_AUTH_PASSWORD}
        - BASIC_AUTH_PROXY_TIMEOUT=${BASIC_AUTH_PROXY_TIMEOUT}
      networks:
        - trino-network
      depends_on:
        - webapp
        - server



volumes:
  minio-data:
    driver: local
  dbt-data:
    driver: local
  workspace:
    name: ${WORKSPACE_DOCKER_MOUNT}
  postgres_data:
    driver: local

  volumes:
    driver: local
  # prefect:
  #   driver: local
  # the data volume is only needed for backward compatibility; when users upgrade
  # from an old Airbyte version that relies on file-based configs, the server needs
  # to read this volume to copy their configs to the database
  data:
    name: ${DATA_DOCKER_MOUNT}
  db:
    name: ${DB_DOCKER_MOUNT}
configs:
  flags:
    file: ./flags.yml
networks:
  trino-network:
    driver: bridge